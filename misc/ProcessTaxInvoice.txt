'**********************************************************************
'  Visual Basic ActiveX Script
'************************************************************************

Function MakeSQLDate(DateToChange)

	dim TempDate
	
	If IsNull(DateToChange) OR DateToChange = "" then
		MakeSQLDate = "null"
	else
		MakeSQLDate = "'" & DateToChange & "'"
	end if
	
End Function


Function GetSuffix (OrdNum)

	' Check what suffix should be used
	Select Case CStr(OrdNum)
	Case "6001008999956"
		GetSuffix = "sNTH"
	Case "6001008999949"
		GetSuffix = "sERD"
	Case "6001008999963"
		GetSuffix = "sPLZ"
	Case "6001008999970"
		GetSuffix = "sCPT"
	Case "6001008999987"
		GetSuffix = "sNTL"
	Case Else
		GetSuffix = "sNTH"
	End Select

End Function

Function Main()
	dim oFile
	dim FolderName
	dim Folder
	dim Files_Collection
	dim FileCount
	dim File
	dim FileName
	dim FileText
	dim StrText
	dim objXML
	dim ArchiveDate
	dim OrderNumber
	dim InvoiceNumber
	dim SQL
	dim curConnection
	dim ReturnSet
	dim ErrorFlag
	dim XMLRef
	dim TaxItems
	dim TaxCount
	dim EANCNum
	dim CQuantity
	dim CCostPrice
	dim CNetPrice
	dim CheckXML
	dim LineItems
	dim LineCount
	dim BuyerMail
	dim BuyerCode
	dim XMLFolder
	
	const const_db_ConnectionString = "Provider=SQLOLEDB.1;Persist Security Info=True;User Id=SparUser;Password=qalp;Initial Catalog=Spar;Data Source=FNET_SPAR_XML"
	const const_app_ApplicationRoot = "https://spar.gatewayec.co.za/"
	const const_app_Path = "D:\"
	const const_app_ObjXML = "Microsoft.XMLDom"
	const const_app_NewMail = "CDONTS.NewMail"
	
	' Set the FolderName
	FolderName = const_app_Path & "SparTaxInvoice\"
	
	' Get the current server date
	ArchiveDate = Replace(FormatDateTime(Date,2),"/","")
	
	' Create the FileSystem Object
	Set oFile = CreateObject("Scripting.FileSystemObject")
	
	Set Folder = oFile.GetFolder(FolderName)
	
	' Get a collection of the files in this folder
	Set Files_Collection = Folder.Files
	
	' Check if there are files in the folder
	FileCount = Files_Collection.Count
	
	if Files_Collection.Count > 0 Then
		' loop through the files in the folder
		For each File in Files_Collection
			' Get the filename
			FileName = File.Name
			
			' Open the text file
			Set FileText = oFile.OpenTextFile(FolderName & FileName,1,false)
			
			' Read the first line of the file
			StrText = FileText.ReadLine
			
			' close the File
			FileText.Close
			
			' Load the string into a dom document
			Set objXML = CreateObject(const_app_ObjXML)
			objXML.async = false
			
			if objXML.LoadXML(Replace(StrText,"&","&amp;")) = False Then
				' Check if the folder does not exist
				if Not oFile.FolderExists(const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate) Then
					' Create the folder
					oFile.CreateFolder (const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate)
				end if
					
				' Save the File to this folder
				objXML.save(const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate & "\" & OrderNumber & GetSuffix(XMLDoc.selectSingleNode("//UNH/CLO/CDPT").text) & ".xml")
			
				' Remove the file from the SparIn Forlder
				oFile.DeleteFile const_app_Path & "SparTaxInvoice\" & FileName,true
				

				' Create the Mail Object
				Set objMail = CreateObject(const_app_NewMail)

				' Build the rest of the mail object properties
				objMail.From = "spar@gatewayec.co.za" 
				objMail.To = "dviviers@gatewaycomms.co.za"
				objMail.Cc = "ckennedy@gatewaycomms.co.za"
				objMail.Subject = "Spar Tax Invoice Error"
				objMail.Importance = 2
				objMail.Body = "Invalid XML Tax Invoice. Source File: " & const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate & "\" & OrderNumber & GetSuffix(objXML.selectSingleNode("//UNH/CLO/CDPT").text) & ".xml"
				objMail.BodyFormat = 1
				objMail.MailFormat = 1
				objMail.Send

				' Close the mail Object
				Set objMail = Nothing
				Set objXML = Nothing

			else
				' Get the ordernumber, Supplier and BuyerID's
				OrderNumber = objXML.selectSingleNode("//UNH/ODD/ORNO/ORNU").text & GetSuffix(objXML.selectSingleNode("//UNH/CLO/CDPT").text)
				InvoiceNumber = objXML.selectSingleNode("//UNH/IRE/INVR/REFN").text
			
				' Build the SQL
				SQL = "exec editTaxInvoice @OrderNumber='" & OrderNumber & "'" & _
					", @TaxInvoice='" & InvoiceNumber & "'" & _
					", @ExtractDate=" & MakeSQLDate(objXML.selectSingleNode("//UNH/extractdate").text) & _
					", @ConfirmDate=" & MakeSQLDate(objXML.selectSingleNode("//UNH/confirmdate").text)
	
				' Create the connection
				Set curConnection = CreateObject("ADODB.Connection")
				curConnection.Open const_db_ConnectionString
			
				' Execute the SP - itemHeaderDetail to get the header detail
				Set ReturnSet = ExecuteSql(SQL, curConnection)
			
				' Check the returnvalue
				if Returnset("returnvalue") <> 0 Then
					' An error occured - Set the error flag
					ErrorFlag = True
					
					' Remove the file from the folder and move it to the Error folder
					' Check if the folder does not exist
					if Not oFile.FolderExists(const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate) Then
						' Create the folder
						oFile.CreateFolder (const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate)
					end if
						
					' Save the File to this folder
					objXML.save(const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate & "\" & OrderNumber & ".xml")
			
					' Remove the file from the SparIn Forlder
					oFile.DeleteFile const_app_Path & "SparTaxInvoice\" & FileName,true
	
					' Create the Mail Object
					Set objMail = CreateObject(const_app_NewMail)
	
					' Build the rest of the mail object properties
					objMail.From = "spar@gatewayec.co.za" 
					objMail.To = "dviviers@gatewaycomms.co.za"
					objMail.Cc = "ckennedy@gatewaycomms.co.za"
					objMail.Subject = "Spar Tax Invoice Error"
					objMail.Importance = 2
					objMail.Body = ReturnSet("errormessage") & " Source File: " & const_app_Path & "SparErrors\TaxInvoice\" & ArchiveDate & "\" & OrderNumber & GetSuffix(objXML.selectSingleNode("//UNH/CLO/CDPT").text) & ".xml"
					objMail.BodyFormat = 1
					objMail.MailFormat = 1
					objMail.Send
	
					' Close the mail Object
					Set objMail = Nothing
					Set objXML = Nothing

				else
					' No error occured - Build the string for the xml
					' Get the xml reference for the origional order
					XMLRef = ReturnSet("XMLRef")
					XMLFolder = left(XMLRef,6)
					BuyerMail = ReturnSet("BuyerEMail")
					BuyerCode = ReturnSet("BuyerCode")
	
					' Close the recordset
					Set ReturnSet = Nothing
					
					' Get the list of line items
					Set TaxItems = objXML.selectNodes("//UNH/ILD")
	
					' Loop through the line items
					For TaxCount = 0 to TaxItems.Length-1
						EANCNum = TaxItems.item(TaxCount).selectSingleNode("PROC/EANC").text
						CQuantity = TaxItems.item(TaxCount).selectSingleNode("QDEL/NODU").text	
						CCostPrice = TaxItems.item(TaxCount).selectSingleNode("COST/COSP").text
						CNetPrice = TaxItems.item(TaxCount).selectSingleNode("NELC").text
					
						' Set the SQL Statement
						SQL = "exec procTaxInvoice @OrderNumber='" & OrderNumber & "'" & _
							", @EANNumber='" & EANCNum & "'" & _
							", @Quantity='" & CQuantity & "'" & _
							", @CostPrice='" & CCostPrice & "'" & _
							", @NetCost='" & CNetPrice & "'"
			
						' Execute the SQL
						Set ReturnSet = ExecuteSql(SQL, curConnection)
								
						' Check the returnvalue
						if ReturnSet("returnvalue") = 0 Then
							' Load the origional XML file into a dom document
							Set CheckXML = CreateObject(const_app_ObjXML)
							CheckXML.async = false
							CheckXML.Load(const_app_Path & "SparOrders\" & XMLRef)
	
							' Set the list of lone items for the origional order
							Set LineItems = CheckXML.selectNodes("//DOCUMENT/UNB/UNH/OLD")
						
							'Update the XML Doc
							CheckXML.selectSingleNode("//DOCUMENT/UNB/APRF").text = "Source Tax Invoice"
							CheckXML.selectSingleNode("//DOCUMENT/UNB/SOURCEREFERNCENUMBER").text = InvoiceNumber
							
							' Loop through this line item collection
							For LineCount = 0 to LineItems.Length-1
							' Check if the EANCNum exists in this XML Doc
								if EANCNum = LineItems.item(LineCount).selectSingleNode("PROC/EANC").text Then
									' Update the origional XML doc with the status, quantity, costprice and netprice
									LineItems.item(LineCount).setAttribute "status", "Confirmed"
									LineItems.item(LineCount).selectSingleNode("QNTO/NROUC").text = CQuantity
									LineItems.item(LineCount).selectSingleNode("COST/COSPC").text = CCostPrice
									LineItems.item(LineCount).selectSingleNode("NELCC").text = CNetPrice
								end if
							Next
						
							' Save the XML Back to the directory
							CheckXML.save(const_app_Path & "SparOrders\" & XMLRef)
	
							' Close the XMLObject
							Set CheckXML = Nothing				
						
						end if
					Next
				end if	
			
				if Not ErrorFlag Then
					' Write the Tax Invoice to an archive directory
					' Check if the folder does not exist
					if Not oFile.FolderExists(const_app_Path & "SparOrders\TaxInvoice\" & ArchiveDate) Then
						' Create the folder
						oFile.CreateFolder (const_app_Path & "SparOrders\TaxInvoice\" & ArchiveDate)
					end if
						
					' Save the File to this folder
					objXML.save(const_app_Path & "SparOrders\TaxInvoice\" & ArchiveDate & "\" & OrderNumber & ".xml")
			
					' Remove the file from the SparIn Forlder
					oFile.DeleteFile const_app_Path & "SparTaxInvoice\" & FileName,true
					
					' Now we need to send the buyer a notification e-mail
					' Build the BodyText
					BodyText = "<html><body><p><font face='Arial' size='2'>This e-mail contains information on Purchase Orders sent via Gateway Communications.</font></p>"
					BodyText = BodyText & "<p><font face='Arial' size='2'>Please do not reply to this e-mail.</font></p>" 
					BodyText = BodyText & "<p><font face='Arial' size='2'>The following Purchase Order Confirmation(s) was/were received:</font></p>" 
					BodyText = BodyText & "<p><font face='Arial' size='2'><a href=" & chr(34) & const_app_ApplicationRoot & " /orders/buyer/default.asp?id=" & XMLFolder & "\" & Trim(OrderNumber) & ".xml&type=1" & chr(34) & ">" & const_app_ApplicationRoot & "/orders/buyer/default.asp</a></font></p>"
					BodyText = BodyText & "<p><font face='Arial' size='2'>Thank You</font></p></body></html>"

					' Create the Mail Object
					Set objMail = CreateObject(const_app_NewMail)
	
					' Build the rest of the mail object properties
					objMail.From = "spar@gatewayec.co.za"
					objMail.To = BuyerMail
					objMail.BCc = "ckennedy@gatewaycomms.co.za;dviviers@gatewaycomms.co.za"
					objMail.Subject = "Purchase Order Notifications ( For Buyer Code: " & BuyerCode & " )"
					objMail.Importance = 2
					objMail.Body = BodyText
					objMail.MailFormat = 0
					objMail.BodyFormat = 0
					objMail.Send
	
					' Close the mail Object
					Set objMail = Nothing
				end if
			end if
		Next
	end if
	
	' Close the objects
	Set Files_Collection = Nothing
	Set Folder = Nothing
	Set oFile = Nothing

	Main = DTSTaskExecResult_Success
End Function
